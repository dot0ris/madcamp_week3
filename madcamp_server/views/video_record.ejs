<!DOCTYPE html>
<html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <base href="/">

        <!-- local에서 로딩한 bootstrap -->
        <!-- <link rel="stylesheet" href="css/bootstrap.min.css" />
        <script src="js/bootstrap.bundle.min.js"></script> -->

        <!-- 온라인에서 로딩한 bootstrap -->
        <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css" integrity="sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T" crossorigin="anonymous">
        <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js" integrity="sha384-JjSmVgyd0p3pXB1rRibZUAYoIIy6OrQ6VrjIEaFf/nJGzIxFDsf4x0xIM+B07jRM" crossorigin="anonymous"></script>

        <!-- 온라인에서 로딩한 bootstrap. jquery 내용이 담김 -->
        <script src="https://code.jquery.com/jquery-3.3.1.slim.min.js" integrity="sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo" crossorigin="anonymous"></script>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js" integrity="sha384-UO2eT0CpHqdSJQ6hJty5KVphtPhzWj9WO1clHTMGa3JDZwrnQq4sF86dIHNDz0W1" crossorigin="anonymous"></script>

        <!-- 내가 추가적으로 설정한 css 파일 -->
        <link rel="stylesheet" href="css/index.css" />

        <!-- 로그인/회원가입을 위해 온라인에서 가져온 소스-->
        <link href="//maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css" rel="stylesheet" id="bootstrap-css">     
        <script src="//maxcdn.bootstrapcdn.com/bootstrap/4.0.0/js/bootstrap.min.js"></script>   


        <!-- 개별 스타일 지정해주기 -->
        <style>
            .footer {
                position: fixed;
                left: 0;
                bottom: 0;
                width: 100%;
                background-color:black;
                color: white;
                text-align: center;
            }
            </style>

        <title>웹 캠 시작</title>
    </head>
    <body>
        <!-- 상단 네비게이션 바 부분-->        
        <nav class="navbar navbar-expand-lg navbar-light bg-light">
            <a class="navbar-brand" href="#"><h4>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Code With Me&nbsp;&nbsp;&nbsp;&nbsp;</h4></a>
                      
            <div class="collapse navbar-collapse" id="navbarSupportedContent">
              <ul class="navbar-nav mr-auto">
                <li class="nav-item active">
                  <a class="nav-link" href="../">main<span class="sr-only">(current)</span></a>
                </li>
                <li class="nav-item">
                  <a class="nav-link" href="./ranks/fetch_friends">rank</a>
                </li>                
              </ul>
              <ul class="navbar-nav ml-auto">
                <li class="nav-item">
                    <a class="nav-link" href="#">let's Study!&nbsp;&nbsp;</a>
                  </li>                
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle" href="#" id="navbarDropdown" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                    접속하기
                    </a>
                    <div class="dropdown-menu" aria-labelledby="navbarDropdown">
                    <a class="dropdown-item" href="./login_signin/page_login">로그인</a>
                    <a class="dropdown-item" href="./login_signin/page_signin">회원가입</a>
                    <a class="dropdown-item" href="api/login_signin/logout">로그아웃</a>
                    </div>
                </li>
              </ul>
            </div>
        </nav>

        <!-- 웹캠 시작 부분 -->
        <div class="container">  
            <div>코윗미에 참여하세요</div>
            <button type="button" onclick="init()">시작</button>
            <div id="webcam-container"></div>
            <div id="label-container"></div>
            <script src="https://cdn.jsdelivr.net/npm/@tensorflow/tfjs@1.3.1/dist/tf.min.js"></script>
            <script src="https://cdn.jsdelivr.net/npm/@teachablemachine/image@0.8/dist/teachablemachine-image.min.js"></script>
            <script type="text/javascript">
                // More API functions here:
                // https://github.com/googlecreativelab/teachablemachine-community/tree/master/libraries/image
            
                // the link to your model provided by Teachable Machine export panel
                const URL = "../my_model/";
                //const URL = "../my_model/";
            
                let model, webcam, labelContainer, maxPredictions;
                let total_studied = 0, prev_time, offset_time = 0;

                // Load the image model and setup the webcam
                async function init() {
                    const modelURL = URL + "model.json";
                    const metadataURL = URL + "metadata.json";
            
                    prev_time = new Date();                        
                    offset_time = new Date();

                    // load the model and metadata
                    // Refer to tmImage.loadFromFiles() in the API to support files from a file picker
                    // or files from your local hard drive
                    // Note: the pose library adds "tmImage" object to your window (window.tmImage)
                    model = await tmImage.load(modelURL, metadataURL);
                    maxPredictions = model.getTotalClasses();
            
                    // Convenience function to setup a webcam
                    const flip = true; // whether to flip the webcam
                    webcam = new tmImage.Webcam(500, 500, flip); // width, height, flip
                    await webcam.setup(); // request access to the webcam
                    await webcam.play();
                    window.requestAnimationFrame(loop);
            
                    // append elements to the DOM
                    document.getElementById("webcam-container").appendChild(webcam.canvas);
                    labelContainer = document.getElementById("label-container");
                    for (let i = 0; i < maxPredictions; i++) { // and class labels
                        labelContainer.appendChild(document.createElement("div"));
                    }
                }
            
                async function loop() {
                    webcam.update(); // update the webcam frame
                    await predict();
                    window.requestAnimationFrame(loop);
                }
            
                // run the webcam image through the image model
                async function predict() {
                    // predict can take in an image, video or canvas html element
                    const prediction = await model.predict(webcam.canvas);     

                    var cur_t = new Date();            
                    var diff_t = cur_t.getTime() - prev_time.getTime();
                    prev_time = cur_t;
                    // for (let i = 0; i < maxPredictions; i++) {
                    //     const classPrediction =
                    //         prediction[i].className + ": " + prediction[i].probability.toFixed(2);
                    //     labelContainer.childNodes[i].innerHTML = classPrediction;
                    // }
                    if(prediction[0].className == "Class 1" && 0.9 < prediction[0].probability.toFixed(2)){                
                        total_studied = total_studied + diff_t;
                        console.log(total_studied);

                        var format_t = new Date(total_studied - 32400000);

                        labelContainer.childNodes[0].innerHTML = "공부 잘 하고 있네  H:" + cur_t.getHours() + "M: "+cur_t.getMinutes() + "S:" + cur_t.getSeconds();
                        // labelContainer.childNodes[1].innerHTML = "누적 공부시간 : " + total_studied.toString();
                        labelContainer.childNodes[1].innerHTML = "누적 공부시간 : " + format_t.getHours() + "시간  " + format_t.getMinutes() + "분  " + format_t.getSeconds() + "초";
                    }else if(prediction[1].className == "Class 2" && 0.9 < prediction[0].probability.toFixed(2)){
                        labelContainer.childNodes[0].innerHTML = "공부 안하네? 용돈 깎는다 ^^ H: "  + cur_t.getHours() + "시간  "+cur_t.getMinutes() + "분 " + cur_t.getSeconds() + "초  ";
                    }else{
                        labelContainer.childNodes[0].innerHTML = "뭐하는지 모르겠네 우리 아들? ^^ CCTV 돌려본다?? ㅎㅎ H: "  + cur_t.getHours() + "시간  "+cur_t.getMinutes() + "분  " + cur_t.getSeconds() + "초";
                    }
                }
            </script>
            <script src="https://code.jquery.com/jquery-3.5.1.js" integrity="sha256-QWo7LDvxbWT2tbbQ97B53yJnYU3WhH/C8ycbRAkjPDc=" crossorigin="anonymous"></script>
        </div>

        <div class="container" id="accumulated_time">
            <button type="button" onclick="submit()">제출</button>
            <script type="text/javascript">
                async function submit() {

                }
            </script>
        </div>
        
        <!-- 하단 footer 부분 -->
        <div class = "footer">
            <div class="container">
                <br>
                <div class="row">
                    <div class="col-sm-4" style="text-align: center;">                        
                    </div>
                    <div class="col-sm-4" style="text-align: center;">
                        <h5>Code With Me</h5>
                    </div>
                    <div class="col-sm-4" style="text-align: right;">
                        Copyright 이현호, 김상윤
                    </div>
                </div>
            </div>
        </div>
    </body>
</html>